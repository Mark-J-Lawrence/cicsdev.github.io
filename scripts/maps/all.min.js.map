{"version":3,"sources":["git.js","load.js"],"names":["githubUser","username","callback","target","document","getElementsByTagName","head","script","window","repos","data","parentNode","removeChild","createElement","src","defer","insertBefore","empty","firstChild","loadRepositories","loadingMessage","classList","add","appendChild","createTextNode","err","meta","status","sort","a","b","name","forEach","repo","newPanel","setAttribute","html_url","panelTitle","description","panelContent","length","substring","sorryMessage","replaceChild","location","addEventListener","getElementById"],"mappings":"AAAA,cAEA,WACE,IAAMA,EAAa,SAACC,EAAUC,GAC5B,IAAMC,EAASC,SAASC,qBAAqB,UAAU,IAAMD,SAASE,KAClEC,EAAS,KAMbC,OAAOC,MAAQ,SAACC,GAHVH,EAAOI,YAAYJ,EAAOI,WAAWC,YAAYL,GAKrDL,EAAS,KAAMQ,KAGjBH,EAASH,SAASS,cAAc,WACzBC,IAAP,+BAA4Cb,EAA5C,qCACAM,EAAOQ,MAAQ,QACfZ,EAAOQ,WAAWK,aAAaT,EAAQJ,IAYnCc,EAAQ,SAACd,GACb,KAAOA,EAAOe,YACZf,EAAOS,YAAYT,EAAOe,aAe9BV,OAAOW,iBAAmB,SAAClB,EAAUE,GACnCc,EAAMd,GACN,IAAMiB,EAAiBhB,SAASS,cAAc,QAC9CO,EAAeC,UAAUC,IAAI,mBAC7BF,EAAeG,YAAYnB,SAASoB,eAAT,uBAA+CvB,EAA/C,uBAE3BD,EAAWC,EAAU,SAACwB,EAAKf,GAEzB,GADAO,EAAMd,IACDsB,GAAOf,EAAKgB,KAAKC,OAAS,IAAK,CACTjB,EAAKA,KAlCrBkB,KAAK,SAACC,EAAGC,GACpB,OAAID,EAAEE,KAAOD,EAAEC,MAAc,EACzBF,EAAEE,KAAOD,EAAEC,KAAa,EAErB,IA+BCC,QAAQ,SAACC,GACb,IAAMC,EAAW9B,SAASS,cAAc,KACxCqB,EAASb,UAAUC,IAAI,QACvBY,EAASC,aAAa,OAAQF,EAAKG,UAEnC,IAAMC,EAAajC,SAASS,cAAc,UAC1CwB,EAAWhB,UAAUC,IAAI,gBACzBe,EAAWd,YAAYnB,SAASoB,eAAeS,EAAKF,OAEpD,IA9BiBO,EA8BXC,EAAenC,SAASS,cAAc,KAC5C0B,EAAalB,UAAUC,IAAI,iBAC3BiB,EAAahB,YAAYnB,SAASoB,gBAhCjBc,EAgCgDL,EAAKK,aA5BnD,IAArBA,EAAYE,OACJF,EAAYG,UAAU,EAAG,KAAnC,MAGKH,EANE,KAgCHJ,EAASX,YAAYc,GACrBH,EAASX,YAAYgB,GAErBpC,EAAOoB,YAAYW,SAGlB,CAEH,IAAMQ,EAAetC,SAASS,cAAc,KAC5C6B,EAAarB,UAAUC,IAAI,SAC3BoB,EAAanB,YAAYnB,SAASoB,eAAe,qGACjDrB,EAAOQ,WAAWgC,aAAaD,EAAcvC,GAC7CK,OAAOoC,SAAP,sBAAwC3C,MAjFhD,GCCEO,OAAOqC,iBAAiB,mBAAoB,WAC1CrC,OAAOW,iBAAiB,UAAWf,SAAS0C,eAAe","file":"../all.min.js","sourcesContent":["'use strict';\n\n(() => {\n  const githubUser = (username, callback) => {\n    const target = document.getElementsByTagName('script')[0] || document.head;\n    let script = null;\n\n    const tidy = () => {\n      if (script.parentNode) script.parentNode.removeChild(script);\n    };\n\n    window.repos = (data) => {\n      tidy();\n      callback(null, data);\n    };\n\n    script = document.createElement('script');\n    script.src = `https://api.github.com/orgs/${username}/repos?callback=repos&per_page=100`;\n    script.defer = 'defer';\n    target.parentNode.insertBefore(script, target);\n  };\n\n  const sortByName = (repos) => {\n    return repos.sort((a, b) => {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n\n      return 0;\n    });\n  };\n\n  const empty = (target) => {\n    while (target.firstChild) {\n      target.removeChild(target.firstChild);\n    }\n  };\n\n  const niceDescription = (description) => {\n    if (!description) {\n      return '';\n    }\n    if (description.length > 130) {\n      return `${description.substring(0, 130)}...`;\n    }\n\n    return description;\n  };\n\n  window.loadRepositories = (username, target) => {\n    empty(target);\n    const loadingMessage = document.createElement('span');\n    loadingMessage.classList.add('loading-message');\n    loadingMessage.appendChild(document.createTextNode(`Querying GitHub for ${username}’s repositories...`));\n\n    githubUser(username, (err, data) => {\n      empty(target);\n      if (!err && data.meta.status < 400) {\n        const repos = sortByName(data.data);\n        repos.forEach((repo) => {\n          const newPanel = document.createElement('a');\n          newPanel.classList.add('repo');\n          newPanel.setAttribute('href', repo.html_url);\n\n          const panelTitle = document.createElement('header');\n          panelTitle.classList.add('repo__header');\n          panelTitle.appendChild(document.createTextNode(repo.name));\n\n          const panelContent = document.createElement('p');\n          panelContent.classList.add('repo__content');\n          panelContent.appendChild(document.createTextNode(niceDescription(repo.description)));\n\n          newPanel.appendChild(panelTitle);\n          newPanel.appendChild(panelContent);\n\n          target.appendChild(newPanel);\n        });\n      }\n      else {\n        // In the event of API failure, redirect straight to GitHub\n        const sorryMessage = document.createElement('p');\n        sorryMessage.classList.add('sorry');\n        sorryMessage.appendChild(document.createTextNode('Sorry, we can’t show you this site right now. We’ll forward you to our GitHub organization page.'));\n        target.parentNode.replaceChild(sorryMessage, target);\n        window.location = `https://github.com/${username}`;\n      }\n    });\n  };\n})();\n","'use strict';\n\n(() => {\n  window.addEventListener('DOMContentLoaded', () => {\n    window.loadRepositories('cicsdev', document.getElementById('github-projects'));\n  });\n})();\n"]}