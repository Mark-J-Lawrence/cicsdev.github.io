{"version":3,"sources":["git.js","load.js"],"names":["githubUser","username","callback","target","document","getElementsByTagName","head","script","tidy","parentNode","removeChild","window","repos","data","createElement","src","defer","insertBefore","sortByName","sort","a","b","name","empty","firstChild","niceDescription","description","length","substring","loadRepositories","loadingMessage","classList","add","appendChild","createTextNode","err","location","forEach","repo","newPanel","setAttribute","html_url","panelTitle","panelContent","addEventListener","getElementById"],"mappings":"AAAA,cAEA,WACE,IAAMA,EAAa,SAACC,EAAUC,GAC5B,IAAMC,EAASC,SAASC,qBAAqB,UAAU,IAAMD,SAASE,KAClEC,EAAS,KAEPC,EAAO,WACPD,EAAOE,YAAYF,EAAOE,WAAWC,YAAYH,IAGvDI,OAAOC,MAAQ,SAACC,GACdL,IACAN,EAAS,KAAMW,KAGjBN,EAASH,SAASU,cAAc,WACzBC,IAAP,+BAA4Cd,EAA5C,wBACAM,EAAOS,MAAQ,QACfb,EAAOM,WAAWQ,aAAaV,EAAQJ,IAGnCe,EAAa,SAACN,GAClB,OAAOA,EAAMO,KAAK,SAACC,EAAGC,GACpB,OAAID,EAAEE,KAAOD,EAAEC,MAAc,EACzBF,EAAEE,KAAOD,EAAEC,KAAa,EAErB,KAILC,EAAQ,SAACpB,GACb,KAAOA,EAAOqB,YACZrB,EAAOO,YAAYP,EAAOqB,aAIxBC,EAAkB,SAACC,GACvB,OAAKA,EAGDA,EAAYC,OAAS,IACbD,EAAYE,UAAU,EAAG,KAAnC,MAGKF,EANE,IASXf,OAAOkB,iBAAmB,SAAC5B,EAAUE,GACnCoB,EAAMpB,GACN,IAAM2B,EAAiB1B,SAASU,cAAc,QAC9CgB,EAAeC,UAAUC,IAAI,mBAC7BF,EAAeG,YAAY7B,SAAS8B,eAAT,uBAA+CjC,EAA/C,uBAE3BD,EAAWC,EAAU,SAACkC,EAAKtB,GACzB,IAAMD,EAAQM,EAAWL,EAAKA,MAC9BU,EAAMpB,GACDgC,EAsBHxB,OAAOyB,SAAP,sBAAwCnC,EArBxCW,EAAMyB,QAAQ,SAACC,GACb,IAAMC,EAAWnC,SAASU,cAAc,KACxCyB,EAASR,UAAUC,IAAI,QACvBO,EAASC,aAAa,OAAQF,EAAKG,UAEnC,IAAMC,EAAatC,SAASU,cAAc,UAC1C4B,EAAWX,UAAUC,IAAI,gBACzBU,EAAWT,YAAY7B,SAAS8B,eAAeI,EAAKhB,OAEpD,IAAMqB,EAAevC,SAASU,cAAc,KAC5C6B,EAAaZ,UAAUC,IAAI,iBAC3BW,EAAaV,YAAY7B,SAAS8B,eAAeT,EAAgBa,EAAKZ,eAEtEa,EAASN,YAAYS,GACrBH,EAASN,YAAYU,GAErBxC,EAAO8B,YAAYM,WCvE3B5B,OAAOiC,iBAAiB,mBAAoB,WAC1CjC,OAAOkB,iBAAiB,UAAWzB,SAASyC,eAAe","file":"../all.min.js","sourcesContent":["'use strict';\n\n(() => {\n  const githubUser = (username, callback) => {\n    const target = document.getElementsByTagName('script')[0] || document.head;\n    let script = null;\n\n    const tidy = () => {\n      if (script.parentNode) script.parentNode.removeChild(script);\n    };\n\n    window.repos = (data) => {\n      tidy();\n      callback(null, data);\n    };\n\n    script = document.createElement('script');\n    script.src = `https://api.github.com/orgs/${username}/repos?callback=repos`;\n    script.defer = 'defer';\n    target.parentNode.insertBefore(script, target);\n  };\n\n  const sortByName = (repos) => {\n    return repos.sort((a, b) => {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n\n      return 0;\n    });\n  };\n\n  const empty = (target) => {\n    while (target.firstChild) {\n      target.removeChild(target.firstChild);\n    }\n  };\n\n  const niceDescription = (description) => {\n    if (!description) {\n      return '';\n    }\n    if (description.length > 130) {\n      return `${description.substring(0, 130)}...`;\n    }\n\n    return description;\n  };\n\n  window.loadRepositories = (username, target) => {\n    empty(target);\n    const loadingMessage = document.createElement('span');\n    loadingMessage.classList.add('loading-message');\n    loadingMessage.appendChild(document.createTextNode(`Querying GitHub for ${username}'s repositories...`));\n\n    githubUser(username, (err, data) => {\n      const repos = sortByName(data.data);\n      empty(target);\n      if (!err) {\n        repos.forEach((repo) => {\n          const newPanel = document.createElement('a');\n          newPanel.classList.add('repo');\n          newPanel.setAttribute('href', repo.html_url);\n\n          const panelTitle = document.createElement('header');\n          panelTitle.classList.add('repo__header');\n          panelTitle.appendChild(document.createTextNode(repo.name));\n\n          const panelContent = document.createElement('p');\n          panelContent.classList.add('repo__content');\n          panelContent.appendChild(document.createTextNode(niceDescription(repo.description)));\n\n          newPanel.appendChild(panelTitle);\n          newPanel.appendChild(panelContent);\n\n          target.appendChild(newPanel);\n        });\n      }\n      else {\n        // In the event of API failure, redirect straight to GitHub\n        window.location = `https://github.com/${username}`;\n      }\n    });\n  };\n})();\n","'use strict';\n\n(() => {\n  window.addEventListener('DOMContentLoaded', () => {\n    window.loadRepositories('cicsdev', document.getElementById('github-projects'));\n  });\n})();\n"]}